
Assignment4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  00000a60  00000af4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a60  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800216  00800216  00000b0a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b0a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013e0  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e22  00000000  00000000  00002020  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000717  00000000  00000000  00002e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  0000355c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000676  00000000  00000000  000036d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000051c  00000000  00000000  00003d4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000426a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	b5 c1       	rjmp	.+874    	; 0x3b0 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e6       	ldi	r30, 0x60	; 96
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 31       	cpi	r26, 0x16	; 22
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e1       	ldi	r26, 0x16	; 22
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	af 31       	cpi	r26, 0x1F	; 31
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	b5 d1       	rcall	.+874    	; 0x48a <main>
 120:	9d c4       	rjmp	.+2362   	; 0xa5c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_nibble>:

void lcd_blank( uint8_t len )                   // blank n digits
{
  while( len-- )
    lcd_putchar( ' ' );
}
 124:	e2 e0       	ldi	r30, 0x02	; 2
 126:	f1 e0       	ldi	r31, 0x01	; 1
 128:	90 81       	ld	r25, Z
 12a:	9f 7e       	andi	r25, 0xEF	; 239
 12c:	90 83       	st	Z, r25
 12e:	88 23       	and	r24, r24
 130:	1c f4       	brge	.+6      	; 0x138 <lcd_nibble+0x14>
 132:	90 81       	ld	r25, Z
 134:	90 61       	ori	r25, 0x10	; 16
 136:	90 83       	st	Z, r25
 138:	e2 e0       	ldi	r30, 0x02	; 2
 13a:	f1 e0       	ldi	r31, 0x01	; 1
 13c:	90 81       	ld	r25, Z
 13e:	97 7f       	andi	r25, 0xF7	; 247
 140:	90 83       	st	Z, r25
 142:	86 ff       	sbrs	r24, 6
 144:	03 c0       	rjmp	.+6      	; 0x14c <lcd_nibble+0x28>
 146:	90 81       	ld	r25, Z
 148:	98 60       	ori	r25, 0x08	; 8
 14a:	90 83       	st	Z, r25
 14c:	9e b1       	in	r25, 0x0e	; 14
 14e:	97 7f       	andi	r25, 0xF7	; 247
 150:	9e b9       	out	0x0e, r25	; 14
 152:	85 ff       	sbrs	r24, 5
 154:	03 c0       	rjmp	.+6      	; 0x15c <lcd_nibble+0x38>
 156:	9e b1       	in	r25, 0x0e	; 14
 158:	98 60       	ori	r25, 0x08	; 8
 15a:	9e b9       	out	0x0e, r25	; 14
 15c:	94 b3       	in	r25, 0x14	; 20
 15e:	9f 7d       	andi	r25, 0xDF	; 223
 160:	94 bb       	out	0x14, r25	; 20
 162:	84 ff       	sbrs	r24, 4
 164:	03 c0       	rjmp	.+6      	; 0x16c <lcd_nibble+0x48>
 166:	84 b3       	in	r24, 0x14	; 20
 168:	80 62       	ori	r24, 0x20	; 32
 16a:	84 bb       	out	0x14, r24	; 20
 16c:	e2 e0       	ldi	r30, 0x02	; 2
 16e:	f1 e0       	ldi	r31, 0x01	; 1
 170:	80 81       	ld	r24, Z
 172:	80 64       	ori	r24, 0x40	; 64
 174:	80 83       	st	Z, r24
 176:	85 e0       	ldi	r24, 0x05	; 5
 178:	8a 95       	dec	r24
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_nibble+0x54>
 17c:	00 00       	nop
 17e:	80 81       	ld	r24, Z
 180:	8f 7b       	andi	r24, 0xBF	; 191
 182:	80 83       	st	Z, r24
 184:	08 95       	ret

00000186 <lcd_byte>:
 186:	cf 93       	push	r28
 188:	c8 2f       	mov	r28, r24
 18a:	cc df       	rcall	.-104    	; 0x124 <lcd_nibble>
 18c:	8c 2f       	mov	r24, r28
 18e:	82 95       	swap	r24
 190:	80 7f       	andi	r24, 0xF0	; 240
 192:	c8 df       	rcall	.-112    	; 0x124 <lcd_nibble>
 194:	87 ec       	ldi	r24, 0xC7	; 199
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <lcd_byte+0x12>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <lcd_byte+0x18>
 19e:	00 00       	nop
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <lcd_command>:
 1a4:	cf 93       	push	r28
 1a6:	c8 2f       	mov	r28, r24
 1a8:	e2 e0       	ldi	r30, 0x02	; 2
 1aa:	f1 e0       	ldi	r31, 0x01	; 1
 1ac:	80 81       	ld	r24, Z
 1ae:	8f 7d       	andi	r24, 0xDF	; 223
 1b0:	80 83       	st	Z, r24
 1b2:	8c 2f       	mov	r24, r28
 1b4:	e8 df       	rcall	.-48     	; 0x186 <lcd_byte>
 1b6:	c4 30       	cpi	r28, 0x04	; 4
 1b8:	18 f0       	brcs	.+6      	; 0x1c0 <lcd_command+0x1c>
 1ba:	c0 38       	cpi	r28, 0x80	; 128
 1bc:	50 f0       	brcs	.+20     	; 0x1d2 <lcd_command+0x2e>
 1be:	07 c0       	rjmp	.+14     	; 0x1ce <lcd_command+0x2a>
 1c0:	8f e3       	ldi	r24, 0x3F	; 63
 1c2:	9f e1       	ldi	r25, 0x1F	; 31
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <lcd_command+0x20>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <lcd_command+0x26>
 1ca:	00 00       	nop
 1cc:	c0 e8       	ldi	r28, 0x80	; 128
 1ce:	c0 93 00 02 	sts	0x0200, r28	; 0x800200 <__data_start>
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <lcd_putchar>:
 1d6:	e2 e0       	ldi	r30, 0x02	; 2
 1d8:	f1 e0       	ldi	r31, 0x01	; 1
 1da:	90 81       	ld	r25, Z
 1dc:	90 62       	ori	r25, 0x20	; 32
 1de:	90 83       	st	Z, r25
 1e0:	d2 df       	rcall	.-92     	; 0x186 <lcd_byte>
 1e2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 1e6:	8f 5f       	subi	r24, 0xFF	; 255
 1e8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
 1ec:	80 39       	cpi	r24, 0x90	; 144
 1ee:	19 f0       	breq	.+6      	; 0x1f6 <lcd_putchar+0x20>
 1f0:	80 3d       	cpi	r24, 0xD0	; 208
 1f2:	19 f0       	breq	.+6      	; 0x1fa <lcd_putchar+0x24>
 1f4:	08 95       	ret
 1f6:	80 ec       	ldi	r24, 0xC0	; 192
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <lcd_putchar+0x26>
 1fa:	80 e8       	ldi	r24, 0x80	; 128
 1fc:	d3 cf       	rjmp	.-90     	; 0x1a4 <lcd_command>
 1fe:	08 95       	ret

00000200 <lcd_puts>:
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	ec 01       	movw	r28, r24
 206:	02 c0       	rjmp	.+4      	; 0x20c <lcd_puts+0xc>
 208:	e6 df       	rcall	.-52     	; 0x1d6 <lcd_putchar>
 20a:	21 96       	adiw	r28, 0x01	; 1
 20c:	88 81       	ld	r24, Y
 20e:	81 11       	cpse	r24, r1
 210:	fb cf       	rjmp	.-10     	; 0x208 <lcd_puts+0x8>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <lcd_init>:


void lcd_init( void )
{
  LCD_DDR_D4 = 1;                               // enable output pins
 218:	83 b3       	in	r24, 0x13	; 19
 21a:	80 62       	ori	r24, 0x20	; 32
 21c:	83 bb       	out	0x13, r24	; 19
  LCD_DDR_D5 = 1;
 21e:	8d b1       	in	r24, 0x0d	; 13
 220:	88 60       	ori	r24, 0x08	; 8
 222:	8d b9       	out	0x0d, r24	; 13
  LCD_DDR_D6 = 1;
 224:	e1 e0       	ldi	r30, 0x01	; 1
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	80 81       	ld	r24, Z
 22a:	88 60       	ori	r24, 0x08	; 8
 22c:	80 83       	st	Z, r24
  LCD_DDR_D7 = 1;
 22e:	80 81       	ld	r24, Z
 230:	80 61       	ori	r24, 0x10	; 16
 232:	80 83       	st	Z, r24
  LCD_DDR_RS = 1;
 234:	80 81       	ld	r24, Z
 236:	80 62       	ori	r24, 0x20	; 32
 238:	80 83       	st	Z, r24
  LCD_DDR_E0 = 1;
 23a:	80 81       	ld	r24, Z
 23c:	80 64       	ori	r24, 0x40	; 64
 23e:	80 83       	st	Z, r24
  LCD_E0 = 0;
 240:	e2 e0       	ldi	r30, 0x02	; 2
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	80 81       	ld	r24, Z
 246:	8f 7b       	andi	r24, 0xBF	; 191
 248:	80 83       	st	Z, r24
  LCD_RS = 0;                                   // send commands
 24a:	80 81       	ld	r24, Z
 24c:	8f 7d       	andi	r24, 0xDF	; 223
 24e:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 250:	8f e5       	ldi	r24, 0x5F	; 95
 252:	9a ee       	ldi	r25, 0xEA	; 234
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_init+0x3c>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_init+0x42>
 25a:	00 00       	nop

  _delay_ms( 15 );
  lcd_nibble( 0x30 );
 25c:	80 e3       	ldi	r24, 0x30	; 48
 25e:	62 df       	rcall	.-316    	; 0x124 <lcd_nibble>
 260:	8f e0       	ldi	r24, 0x0F	; 15
 262:	90 e4       	ldi	r25, 0x40	; 64
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <lcd_init+0x4c>
 268:	00 c0       	rjmp	.+0      	; 0x26a <lcd_init+0x52>
 26a:	00 00       	nop
  _delay_ms( 4.1 );
  lcd_nibble( 0x30 );
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	5a df       	rcall	.-332    	; 0x124 <lcd_nibble>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 270:	8f e8       	ldi	r24, 0x8F	; 143
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <lcd_init+0x5c>
 278:	00 c0       	rjmp	.+0      	; 0x27a <lcd_init+0x62>
  _delay_us( 100 );
  lcd_nibble( 0x30 );
 27a:	00 00       	nop
 27c:	80 e3       	ldi	r24, 0x30	; 48
 27e:	52 df       	rcall	.-348    	; 0x124 <lcd_nibble>
 280:	87 ec       	ldi	r24, 0xC7	; 199
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	01 97       	sbiw	r24, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <lcd_init+0x6c>
 288:	00 c0       	rjmp	.+0      	; 0x28a <lcd_init+0x72>
  _delay_us( LCD_TIME_DAT );
  lcd_nibble( 0x20 );                           // 4 bit mode
 28a:	00 00       	nop
 28c:	80 e2       	ldi	r24, 0x20	; 32
 28e:	4a df       	rcall	.-364    	; 0x124 <lcd_nibble>
 290:	87 ec       	ldi	r24, 0xC7	; 199
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <lcd_init+0x7c>
 298:	00 c0       	rjmp	.+0      	; 0x29a <lcd_init+0x82>
  _delay_us( LCD_TIME_DAT );
#if LCD_LINE == 1
  lcd_command( 0x20 );                          // 1 line
#else
  lcd_command( 0x28 );                          // 2 lines 5*7
 29a:	00 00       	nop
 29c:	88 e2       	ldi	r24, 0x28	; 40
#endif
  lcd_command( 0x08 );                          // display off
 29e:	82 df       	rcall	.-252    	; 0x1a4 <lcd_command>
 2a0:	88 e0       	ldi	r24, 0x08	; 8
  lcd_command( 0x01 );                          // display clear
 2a2:	80 df       	rcall	.-256    	; 0x1a4 <lcd_command>
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	7e df       	rcall	.-260    	; 0x1a4 <lcd_command>
  lcd_command( 0x06 );                          // cursor increment
 2a8:	86 e0       	ldi	r24, 0x06	; 6
 2aa:	7c df       	rcall	.-264    	; 0x1a4 <lcd_command>
 2ac:	8c e0       	ldi	r24, 0x0C	; 12
  lcd_command( 0x0C );                          // on, no cursor, no blink
 2ae:	7a cf       	rjmp	.-268    	; 0x1a4 <lcd_command>
 2b0:	08 95       	ret

000002b2 <timer1_init>:
 * - Prescaler: 8
 * - OCR1A: 1999
 * Resulting in 1ms interrupts (16MHz/8/2000 = 1000Hz)
 */
void timer1_init() {
    TCCR1A = 0;                 ///< Clear Timer1 control registers
 2b2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    TCCR1B = 0;
 2b6:	e1 e8       	ldi	r30, 0x81	; 129
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	10 82       	st	Z, r1
    OCR1A = 1999;               ///< Set compare match value
 2bc:	8f ec       	ldi	r24, 0xCF	; 207
 2be:	97 e0       	ldi	r25, 0x07	; 7
 2c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 2c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    TCCR1B |= (1 << WGM12);     ///< Enable CTC mode
 2c8:	80 81       	ld	r24, Z
 2ca:	88 60       	ori	r24, 0x08	; 8
 2cc:	80 83       	st	Z, r24
    TCCR1B |= (1 << CS11);      ///< Set prescaler to 8
 2ce:	80 81       	ld	r24, Z
 2d0:	82 60       	ori	r24, 0x02	; 2
 2d2:	80 83       	st	Z, r24
    TIMSK1 |= (1 << OCIE1A);    ///< Enable timer compare interrupt
 2d4:	ef e6       	ldi	r30, 0x6F	; 111
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	80 83       	st	Z, r24
 2de:	08 95       	ret

000002e0 <init_buttons>:
 * Configures ADC with:
 * - Reference: AVCC
 * - Prescaler: 128
 */
void init_buttons() {
    ADCSRA = (1 << ADEN) |      ///< Enable ADC
 2e0:	87 e8       	ldi	r24, 0x87	; 135
 2e2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
             (1 << ADPS2) |     ///< Set ADC prescaler to 128
             (1 << ADPS1) | 
             (1 << ADPS0);
    ADMUX = (1 << REFS0);       ///< Set reference voltage to AVCC
 2e6:	80 e4       	ldi	r24, 0x40	; 64
 2e8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 2ec:	08 95       	ret

000002ee <check_select_button>:
/**
 * @brief Check if select button is pressed
 * @return uint8_t 1 if button is pressed (ADC value 555-789), 0 otherwise
 */
uint8_t check_select_button() {
    ADCSRA |= (1 << ADSC);              ///< Start ADC conversion
 2ee:	ea e7       	ldi	r30, 0x7A	; 122
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	80 64       	ori	r24, 0x40	; 64
 2f6:	80 83       	st	Z, r24
    while (ADCSRA & (1 << ADSC));       ///< Wait for conversion complete
 2f8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 2fc:	86 fd       	sbrc	r24, 6
 2fe:	fc cf       	rjmp	.-8      	; 0x2f8 <check_select_button+0xa>
    return (ADC >= 555 && ADC < 790);   ///< Check against button voltage range
 300:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 304:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 308:	8b 32       	cpi	r24, 0x2B	; 43
 30a:	92 40       	sbci	r25, 0x02	; 2
 30c:	48 f0       	brcs	.+18     	; 0x320 <check_select_button+0x32>
 30e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 312:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 316:	86 31       	cpi	r24, 0x16	; 22
 318:	93 40       	sbci	r25, 0x03	; 3
 31a:	20 f0       	brcs	.+8      	; 0x324 <check_select_button+0x36>
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	08 95       	ret
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	08 95       	ret
 324:	81 e0       	ldi	r24, 0x01	; 1
}
 326:	08 95       	ret

00000328 <increment_timer>:
 * - milliseconds -> seconds
 * - seconds -> minutes
 * - minutes -> hours
 */
void increment_timer() {
    sub_seconds++;
 328:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sub_seconds>
 32c:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sub_seconds+0x1>
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <sub_seconds+0x1>
 336:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <sub_seconds>
    if(sub_seconds > 999) {
 33a:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sub_seconds>
 33e:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sub_seconds+0x1>
 342:	88 3e       	cpi	r24, 0xE8	; 232
 344:	93 40       	sbci	r25, 0x03	; 3
 346:	9c f1       	brlt	.+102    	; 0x3ae <increment_timer+0x86>
        sub_seconds = 0;
 348:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <sub_seconds+0x1>
 34c:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <sub_seconds>
        seconds++;
 350:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <seconds>
 354:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <seconds+0x1>
 358:	01 96       	adiw	r24, 0x01	; 1
 35a:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <seconds+0x1>
 35e:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <seconds>
        if(seconds > 59) {
 362:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <seconds>
 366:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <seconds+0x1>
 36a:	cc 97       	sbiw	r24, 0x3c	; 60
 36c:	04 f1       	brlt	.+64     	; 0x3ae <increment_timer+0x86>
            seconds = 0;
 36e:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <seconds+0x1>
 372:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <seconds>
            minutes++;
 376:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <minutes>
 37a:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <minutes+0x1>
 37e:	01 96       	adiw	r24, 0x01	; 1
 380:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <minutes+0x1>
 384:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <minutes>
            if(minutes > 59) {
 388:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <minutes>
 38c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <minutes+0x1>
 390:	cc 97       	sbiw	r24, 0x3c	; 60
 392:	6c f0       	brlt	.+26     	; 0x3ae <increment_timer+0x86>
                minutes = 0;
 394:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <minutes+0x1>
 398:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <minutes>
                hours++;
 39c:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <hours>
 3a0:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <hours+0x1>
 3a4:	01 96       	adiw	r24, 0x01	; 1
 3a6:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <hours+0x1>
 3aa:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <hours>
 3ae:	08 95       	ret

000003b0 <__vector_17>:
 * 
 * Updates timekeeping variables and refreshes LCD display:
 * - Line 0: Always shows current time (master clock)
 * - Line 1: Shows current time only when not paused
 */
ISR(TIMER1_COMPA_vect) {
 3b0:	1f 92       	push	r1
 3b2:	0f 92       	push	r0
 3b4:	0f b6       	in	r0, 0x3f	; 63
 3b6:	0f 92       	push	r0
 3b8:	11 24       	eor	r1, r1
 3ba:	0b b6       	in	r0, 0x3b	; 59
 3bc:	0f 92       	push	r0
 3be:	0f 93       	push	r16
 3c0:	1f 93       	push	r17
 3c2:	2f 93       	push	r18
 3c4:	3f 93       	push	r19
 3c6:	4f 93       	push	r20
 3c8:	5f 93       	push	r21
 3ca:	6f 93       	push	r22
 3cc:	7f 93       	push	r23
 3ce:	8f 93       	push	r24
 3d0:	9f 93       	push	r25
 3d2:	af 93       	push	r26
 3d4:	bf 93       	push	r27
 3d6:	ef 93       	push	r30
 3d8:	ff 93       	push	r31
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	60 97       	sbiw	r28, 0x10	; 16
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	cd bf       	out	0x3d, r28	; 61
    increment_timer();  ///< Update time variables
 3e8:	9f df       	rcall	.-194    	; 0x328 <increment_timer>
    
    // Format and display time
    char running_time[16];
    sprintf(running_time, "%02d:%02d:%02d.%03d", hours, minutes, seconds, sub_seconds);
 3ea:	60 91 1d 02 	lds	r22, 0x021D	; 0x80021d <sub_seconds>
 3ee:	70 91 1e 02 	lds	r23, 0x021E	; 0x80021e <sub_seconds+0x1>
 3f2:	40 91 1b 02 	lds	r20, 0x021B	; 0x80021b <seconds>
 3f6:	50 91 1c 02 	lds	r21, 0x021C	; 0x80021c <seconds+0x1>
 3fa:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <minutes>
 3fe:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <minutes+0x1>
 402:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <hours>
 406:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <hours+0x1>
 40a:	7f 93       	push	r23
 40c:	6f 93       	push	r22
 40e:	5f 93       	push	r21
 410:	4f 93       	push	r20
 412:	3f 93       	push	r19
 414:	2f 93       	push	r18
 416:	9f 93       	push	r25
 418:	8f 93       	push	r24
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	92 e0       	ldi	r25, 0x02	; 2
 41e:	9f 93       	push	r25
 420:	8f 93       	push	r24
 422:	8e 01       	movw	r16, r28
 424:	0f 5f       	subi	r16, 0xFF	; 255
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 428:	1f 93       	push	r17
 42a:	0f 93       	push	r16
 42c:	3c d0       	rcall	.+120    	; 0x4a6 <sprintf>
    
    // Master clock (always displayed)
    lcd_xy(0, 0);
 42e:	80 e8       	ldi	r24, 0x80	; 128
 430:	b9 de       	rcall	.-654    	; 0x1a4 <lcd_command>
    lcd_puts(running_time);
 432:	c8 01       	movw	r24, r16
 434:	e5 de       	rcall	.-566    	; 0x200 <lcd_puts>
 436:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__data_end>
    
    // Secondary timer (pausable)
    if(!timer_paused) {
 43a:	0f b6       	in	r0, 0x3f	; 63
 43c:	f8 94       	cli
 43e:	de bf       	out	0x3e, r29	; 62
 440:	0f be       	out	0x3f, r0	; 63
 442:	cd bf       	out	0x3d, r28	; 61
 444:	81 11       	cpse	r24, r1
 446:	04 c0       	rjmp	.+8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
        lcd_xy(0, 1);
 448:	80 ec       	ldi	r24, 0xC0	; 192
 44a:	ac de       	rcall	.-680    	; 0x1a4 <lcd_command>
 44c:	c8 01       	movw	r24, r16
        lcd_puts(running_time);
 44e:	d8 de       	rcall	.-592    	; 0x200 <lcd_puts>
 450:	60 96       	adiw	r28, 0x10	; 16
 452:	0f b6       	in	r0, 0x3f	; 63
    }
}
 454:	f8 94       	cli
 456:	de bf       	out	0x3e, r29	; 62
 458:	0f be       	out	0x3f, r0	; 63
 45a:	cd bf       	out	0x3d, r28	; 61
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	ff 91       	pop	r31
 462:	ef 91       	pop	r30
 464:	bf 91       	pop	r27
 466:	af 91       	pop	r26
 468:	9f 91       	pop	r25
 46a:	8f 91       	pop	r24
 46c:	7f 91       	pop	r23
 46e:	6f 91       	pop	r22
 470:	5f 91       	pop	r21
 472:	4f 91       	pop	r20
 474:	3f 91       	pop	r19
 476:	2f 91       	pop	r18
 478:	1f 91       	pop	r17
 47a:	0f 91       	pop	r16
 47c:	0f 90       	pop	r0
 47e:	0b be       	out	0x3b, r0	; 59
 480:	0f 90       	pop	r0
 482:	0f be       	out	0x3f, r0	; 63
 484:	0f 90       	pop	r0
 486:	1f 90       	pop	r1
 488:	18 95       	reti

0000048a <main>:
 48a:	c6 de       	rcall	.-628    	; 0x218 <lcd_init>
 48c:	29 df       	rcall	.-430    	; 0x2e0 <init_buttons>
 */
int main(void) {
    // Hardware initialization
    lcd_init();
    init_buttons();
    timer1_init();
 48e:	11 df       	rcall	.-478    	; 0x2b2 <timer1_init>
    sei();  ///< Enable global interrupts
 490:	78 94       	sei
    
    // Main application loop
    while(1) {
        if(check_select_button()) {
 492:	2d df       	rcall	.-422    	; 0x2ee <check_select_button>
 494:	88 23       	and	r24, r24
 496:	e9 f3       	breq	.-6      	; 0x492 <main+0x8>
 498:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <__data_end>
            timer_paused = !timer_paused;  ///< Toggle pause state on button press
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	89 27       	eor	r24, r25
 4a0:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <__data_end>
 4a4:	f6 cf       	rjmp	.-20     	; 0x492 <main+0x8>

000004a6 <sprintf>:
 4a6:	0f 93       	push	r16
 4a8:	1f 93       	push	r17
 4aa:	cf 93       	push	r28
 4ac:	df 93       	push	r29
 4ae:	cd b7       	in	r28, 0x3d	; 61
 4b0:	de b7       	in	r29, 0x3e	; 62
 4b2:	2e 97       	sbiw	r28, 0x0e	; 14
 4b4:	0f b6       	in	r0, 0x3f	; 63
 4b6:	f8 94       	cli
 4b8:	de bf       	out	0x3e, r29	; 62
 4ba:	0f be       	out	0x3f, r0	; 63
 4bc:	cd bf       	out	0x3d, r28	; 61
 4be:	0e 89       	ldd	r16, Y+22	; 0x16
 4c0:	1f 89       	ldd	r17, Y+23	; 0x17
 4c2:	86 e0       	ldi	r24, 0x06	; 6
 4c4:	8c 83       	std	Y+4, r24	; 0x04
 4c6:	1a 83       	std	Y+2, r17	; 0x02
 4c8:	09 83       	std	Y+1, r16	; 0x01
 4ca:	8f ef       	ldi	r24, 0xFF	; 255
 4cc:	9f e7       	ldi	r25, 0x7F	; 127
 4ce:	9e 83       	std	Y+6, r25	; 0x06
 4d0:	8d 83       	std	Y+5, r24	; 0x05
 4d2:	ae 01       	movw	r20, r28
 4d4:	46 5e       	subi	r20, 0xE6	; 230
 4d6:	5f 4f       	sbci	r21, 0xFF	; 255
 4d8:	68 8d       	ldd	r22, Y+24	; 0x18
 4da:	79 8d       	ldd	r23, Y+25	; 0x19
 4dc:	ce 01       	movw	r24, r28
 4de:	01 96       	adiw	r24, 0x01	; 1
 4e0:	10 d0       	rcall	.+32     	; 0x502 <vfprintf>
 4e2:	ef 81       	ldd	r30, Y+7	; 0x07
 4e4:	f8 85       	ldd	r31, Y+8	; 0x08
 4e6:	e0 0f       	add	r30, r16
 4e8:	f1 1f       	adc	r31, r17
 4ea:	10 82       	st	Z, r1
 4ec:	2e 96       	adiw	r28, 0x0e	; 14
 4ee:	0f b6       	in	r0, 0x3f	; 63
 4f0:	f8 94       	cli
 4f2:	de bf       	out	0x3e, r29	; 62
 4f4:	0f be       	out	0x3f, r0	; 63
 4f6:	cd bf       	out	0x3d, r28	; 61
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	1f 91       	pop	r17
 4fe:	0f 91       	pop	r16
 500:	08 95       	ret

00000502 <vfprintf>:
 502:	2f 92       	push	r2
 504:	3f 92       	push	r3
 506:	4f 92       	push	r4
 508:	5f 92       	push	r5
 50a:	6f 92       	push	r6
 50c:	7f 92       	push	r7
 50e:	8f 92       	push	r8
 510:	9f 92       	push	r9
 512:	af 92       	push	r10
 514:	bf 92       	push	r11
 516:	cf 92       	push	r12
 518:	df 92       	push	r13
 51a:	ef 92       	push	r14
 51c:	ff 92       	push	r15
 51e:	0f 93       	push	r16
 520:	1f 93       	push	r17
 522:	cf 93       	push	r28
 524:	df 93       	push	r29
 526:	cd b7       	in	r28, 0x3d	; 61
 528:	de b7       	in	r29, 0x3e	; 62
 52a:	2b 97       	sbiw	r28, 0x0b	; 11
 52c:	0f b6       	in	r0, 0x3f	; 63
 52e:	f8 94       	cli
 530:	de bf       	out	0x3e, r29	; 62
 532:	0f be       	out	0x3f, r0	; 63
 534:	cd bf       	out	0x3d, r28	; 61
 536:	6c 01       	movw	r12, r24
 538:	7b 01       	movw	r14, r22
 53a:	8a 01       	movw	r16, r20
 53c:	fc 01       	movw	r30, r24
 53e:	17 82       	std	Z+7, r1	; 0x07
 540:	16 82       	std	Z+6, r1	; 0x06
 542:	83 81       	ldd	r24, Z+3	; 0x03
 544:	81 ff       	sbrs	r24, 1
 546:	bf c1       	rjmp	.+894    	; 0x8c6 <vfprintf+0x3c4>
 548:	ce 01       	movw	r24, r28
 54a:	01 96       	adiw	r24, 0x01	; 1
 54c:	3c 01       	movw	r6, r24
 54e:	f6 01       	movw	r30, r12
 550:	93 81       	ldd	r25, Z+3	; 0x03
 552:	f7 01       	movw	r30, r14
 554:	93 fd       	sbrc	r25, 3
 556:	85 91       	lpm	r24, Z+
 558:	93 ff       	sbrs	r25, 3
 55a:	81 91       	ld	r24, Z+
 55c:	7f 01       	movw	r14, r30
 55e:	88 23       	and	r24, r24
 560:	09 f4       	brne	.+2      	; 0x564 <vfprintf+0x62>
 562:	ad c1       	rjmp	.+858    	; 0x8be <vfprintf+0x3bc>
 564:	85 32       	cpi	r24, 0x25	; 37
 566:	39 f4       	brne	.+14     	; 0x576 <vfprintf+0x74>
 568:	93 fd       	sbrc	r25, 3
 56a:	85 91       	lpm	r24, Z+
 56c:	93 ff       	sbrs	r25, 3
 56e:	81 91       	ld	r24, Z+
 570:	7f 01       	movw	r14, r30
 572:	85 32       	cpi	r24, 0x25	; 37
 574:	21 f4       	brne	.+8      	; 0x57e <vfprintf+0x7c>
 576:	b6 01       	movw	r22, r12
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	d6 d1       	rcall	.+940    	; 0x928 <fputc>
 57c:	e8 cf       	rjmp	.-48     	; 0x54e <vfprintf+0x4c>
 57e:	91 2c       	mov	r9, r1
 580:	21 2c       	mov	r2, r1
 582:	31 2c       	mov	r3, r1
 584:	ff e1       	ldi	r31, 0x1F	; 31
 586:	f3 15       	cp	r31, r3
 588:	d8 f0       	brcs	.+54     	; 0x5c0 <vfprintf+0xbe>
 58a:	8b 32       	cpi	r24, 0x2B	; 43
 58c:	79 f0       	breq	.+30     	; 0x5ac <vfprintf+0xaa>
 58e:	38 f4       	brcc	.+14     	; 0x59e <vfprintf+0x9c>
 590:	80 32       	cpi	r24, 0x20	; 32
 592:	79 f0       	breq	.+30     	; 0x5b2 <vfprintf+0xb0>
 594:	83 32       	cpi	r24, 0x23	; 35
 596:	a1 f4       	brne	.+40     	; 0x5c0 <vfprintf+0xbe>
 598:	23 2d       	mov	r18, r3
 59a:	20 61       	ori	r18, 0x10	; 16
 59c:	1d c0       	rjmp	.+58     	; 0x5d8 <vfprintf+0xd6>
 59e:	8d 32       	cpi	r24, 0x2D	; 45
 5a0:	61 f0       	breq	.+24     	; 0x5ba <vfprintf+0xb8>
 5a2:	80 33       	cpi	r24, 0x30	; 48
 5a4:	69 f4       	brne	.+26     	; 0x5c0 <vfprintf+0xbe>
 5a6:	23 2d       	mov	r18, r3
 5a8:	21 60       	ori	r18, 0x01	; 1
 5aa:	16 c0       	rjmp	.+44     	; 0x5d8 <vfprintf+0xd6>
 5ac:	83 2d       	mov	r24, r3
 5ae:	82 60       	ori	r24, 0x02	; 2
 5b0:	38 2e       	mov	r3, r24
 5b2:	e3 2d       	mov	r30, r3
 5b4:	e4 60       	ori	r30, 0x04	; 4
 5b6:	3e 2e       	mov	r3, r30
 5b8:	2a c0       	rjmp	.+84     	; 0x60e <vfprintf+0x10c>
 5ba:	f3 2d       	mov	r31, r3
 5bc:	f8 60       	ori	r31, 0x08	; 8
 5be:	1d c0       	rjmp	.+58     	; 0x5fa <vfprintf+0xf8>
 5c0:	37 fc       	sbrc	r3, 7
 5c2:	2d c0       	rjmp	.+90     	; 0x61e <vfprintf+0x11c>
 5c4:	20 ed       	ldi	r18, 0xD0	; 208
 5c6:	28 0f       	add	r18, r24
 5c8:	2a 30       	cpi	r18, 0x0A	; 10
 5ca:	40 f0       	brcs	.+16     	; 0x5dc <vfprintf+0xda>
 5cc:	8e 32       	cpi	r24, 0x2E	; 46
 5ce:	b9 f4       	brne	.+46     	; 0x5fe <vfprintf+0xfc>
 5d0:	36 fc       	sbrc	r3, 6
 5d2:	75 c1       	rjmp	.+746    	; 0x8be <vfprintf+0x3bc>
 5d4:	23 2d       	mov	r18, r3
 5d6:	20 64       	ori	r18, 0x40	; 64
 5d8:	32 2e       	mov	r3, r18
 5da:	19 c0       	rjmp	.+50     	; 0x60e <vfprintf+0x10c>
 5dc:	36 fe       	sbrs	r3, 6
 5de:	06 c0       	rjmp	.+12     	; 0x5ec <vfprintf+0xea>
 5e0:	8a e0       	ldi	r24, 0x0A	; 10
 5e2:	98 9e       	mul	r9, r24
 5e4:	20 0d       	add	r18, r0
 5e6:	11 24       	eor	r1, r1
 5e8:	92 2e       	mov	r9, r18
 5ea:	11 c0       	rjmp	.+34     	; 0x60e <vfprintf+0x10c>
 5ec:	ea e0       	ldi	r30, 0x0A	; 10
 5ee:	2e 9e       	mul	r2, r30
 5f0:	20 0d       	add	r18, r0
 5f2:	11 24       	eor	r1, r1
 5f4:	22 2e       	mov	r2, r18
 5f6:	f3 2d       	mov	r31, r3
 5f8:	f0 62       	ori	r31, 0x20	; 32
 5fa:	3f 2e       	mov	r3, r31
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <vfprintf+0x10c>
 5fe:	8c 36       	cpi	r24, 0x6C	; 108
 600:	21 f4       	brne	.+8      	; 0x60a <vfprintf+0x108>
 602:	83 2d       	mov	r24, r3
 604:	80 68       	ori	r24, 0x80	; 128
 606:	38 2e       	mov	r3, r24
 608:	02 c0       	rjmp	.+4      	; 0x60e <vfprintf+0x10c>
 60a:	88 36       	cpi	r24, 0x68	; 104
 60c:	41 f4       	brne	.+16     	; 0x61e <vfprintf+0x11c>
 60e:	f7 01       	movw	r30, r14
 610:	93 fd       	sbrc	r25, 3
 612:	85 91       	lpm	r24, Z+
 614:	93 ff       	sbrs	r25, 3
 616:	81 91       	ld	r24, Z+
 618:	7f 01       	movw	r14, r30
 61a:	81 11       	cpse	r24, r1
 61c:	b3 cf       	rjmp	.-154    	; 0x584 <vfprintf+0x82>
 61e:	98 2f       	mov	r25, r24
 620:	9f 7d       	andi	r25, 0xDF	; 223
 622:	95 54       	subi	r25, 0x45	; 69
 624:	93 30       	cpi	r25, 0x03	; 3
 626:	28 f4       	brcc	.+10     	; 0x632 <vfprintf+0x130>
 628:	0c 5f       	subi	r16, 0xFC	; 252
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	9f e3       	ldi	r25, 0x3F	; 63
 62e:	99 83       	std	Y+1, r25	; 0x01
 630:	0d c0       	rjmp	.+26     	; 0x64c <vfprintf+0x14a>
 632:	83 36       	cpi	r24, 0x63	; 99
 634:	31 f0       	breq	.+12     	; 0x642 <vfprintf+0x140>
 636:	83 37       	cpi	r24, 0x73	; 115
 638:	71 f0       	breq	.+28     	; 0x656 <vfprintf+0x154>
 63a:	83 35       	cpi	r24, 0x53	; 83
 63c:	09 f0       	breq	.+2      	; 0x640 <vfprintf+0x13e>
 63e:	55 c0       	rjmp	.+170    	; 0x6ea <vfprintf+0x1e8>
 640:	20 c0       	rjmp	.+64     	; 0x682 <vfprintf+0x180>
 642:	f8 01       	movw	r30, r16
 644:	80 81       	ld	r24, Z
 646:	89 83       	std	Y+1, r24	; 0x01
 648:	0e 5f       	subi	r16, 0xFE	; 254
 64a:	1f 4f       	sbci	r17, 0xFF	; 255
 64c:	88 24       	eor	r8, r8
 64e:	83 94       	inc	r8
 650:	91 2c       	mov	r9, r1
 652:	53 01       	movw	r10, r6
 654:	12 c0       	rjmp	.+36     	; 0x67a <vfprintf+0x178>
 656:	28 01       	movw	r4, r16
 658:	f2 e0       	ldi	r31, 0x02	; 2
 65a:	4f 0e       	add	r4, r31
 65c:	51 1c       	adc	r5, r1
 65e:	f8 01       	movw	r30, r16
 660:	a0 80       	ld	r10, Z
 662:	b1 80       	ldd	r11, Z+1	; 0x01
 664:	36 fe       	sbrs	r3, 6
 666:	03 c0       	rjmp	.+6      	; 0x66e <vfprintf+0x16c>
 668:	69 2d       	mov	r22, r9
 66a:	70 e0       	ldi	r23, 0x00	; 0
 66c:	02 c0       	rjmp	.+4      	; 0x672 <vfprintf+0x170>
 66e:	6f ef       	ldi	r22, 0xFF	; 255
 670:	7f ef       	ldi	r23, 0xFF	; 255
 672:	c5 01       	movw	r24, r10
 674:	4e d1       	rcall	.+668    	; 0x912 <strnlen>
 676:	4c 01       	movw	r8, r24
 678:	82 01       	movw	r16, r4
 67a:	f3 2d       	mov	r31, r3
 67c:	ff 77       	andi	r31, 0x7F	; 127
 67e:	3f 2e       	mov	r3, r31
 680:	15 c0       	rjmp	.+42     	; 0x6ac <vfprintf+0x1aa>
 682:	28 01       	movw	r4, r16
 684:	22 e0       	ldi	r18, 0x02	; 2
 686:	42 0e       	add	r4, r18
 688:	51 1c       	adc	r5, r1
 68a:	f8 01       	movw	r30, r16
 68c:	a0 80       	ld	r10, Z
 68e:	b1 80       	ldd	r11, Z+1	; 0x01
 690:	36 fe       	sbrs	r3, 6
 692:	03 c0       	rjmp	.+6      	; 0x69a <vfprintf+0x198>
 694:	69 2d       	mov	r22, r9
 696:	70 e0       	ldi	r23, 0x00	; 0
 698:	02 c0       	rjmp	.+4      	; 0x69e <vfprintf+0x19c>
 69a:	6f ef       	ldi	r22, 0xFF	; 255
 69c:	7f ef       	ldi	r23, 0xFF	; 255
 69e:	c5 01       	movw	r24, r10
 6a0:	2d d1       	rcall	.+602    	; 0x8fc <strnlen_P>
 6a2:	4c 01       	movw	r8, r24
 6a4:	f3 2d       	mov	r31, r3
 6a6:	f0 68       	ori	r31, 0x80	; 128
 6a8:	3f 2e       	mov	r3, r31
 6aa:	82 01       	movw	r16, r4
 6ac:	33 fc       	sbrc	r3, 3
 6ae:	19 c0       	rjmp	.+50     	; 0x6e2 <vfprintf+0x1e0>
 6b0:	82 2d       	mov	r24, r2
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	88 16       	cp	r8, r24
 6b6:	99 06       	cpc	r9, r25
 6b8:	a0 f4       	brcc	.+40     	; 0x6e2 <vfprintf+0x1e0>
 6ba:	b6 01       	movw	r22, r12
 6bc:	80 e2       	ldi	r24, 0x20	; 32
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	33 d1       	rcall	.+614    	; 0x928 <fputc>
 6c2:	2a 94       	dec	r2
 6c4:	f5 cf       	rjmp	.-22     	; 0x6b0 <vfprintf+0x1ae>
 6c6:	f5 01       	movw	r30, r10
 6c8:	37 fc       	sbrc	r3, 7
 6ca:	85 91       	lpm	r24, Z+
 6cc:	37 fe       	sbrs	r3, 7
 6ce:	81 91       	ld	r24, Z+
 6d0:	5f 01       	movw	r10, r30
 6d2:	b6 01       	movw	r22, r12
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	28 d1       	rcall	.+592    	; 0x928 <fputc>
 6d8:	21 10       	cpse	r2, r1
 6da:	2a 94       	dec	r2
 6dc:	21 e0       	ldi	r18, 0x01	; 1
 6de:	82 1a       	sub	r8, r18
 6e0:	91 08       	sbc	r9, r1
 6e2:	81 14       	cp	r8, r1
 6e4:	91 04       	cpc	r9, r1
 6e6:	79 f7       	brne	.-34     	; 0x6c6 <vfprintf+0x1c4>
 6e8:	e1 c0       	rjmp	.+450    	; 0x8ac <vfprintf+0x3aa>
 6ea:	84 36       	cpi	r24, 0x64	; 100
 6ec:	11 f0       	breq	.+4      	; 0x6f2 <vfprintf+0x1f0>
 6ee:	89 36       	cpi	r24, 0x69	; 105
 6f0:	39 f5       	brne	.+78     	; 0x740 <vfprintf+0x23e>
 6f2:	f8 01       	movw	r30, r16
 6f4:	37 fe       	sbrs	r3, 7
 6f6:	07 c0       	rjmp	.+14     	; 0x706 <vfprintf+0x204>
 6f8:	60 81       	ld	r22, Z
 6fa:	71 81       	ldd	r23, Z+1	; 0x01
 6fc:	82 81       	ldd	r24, Z+2	; 0x02
 6fe:	93 81       	ldd	r25, Z+3	; 0x03
 700:	0c 5f       	subi	r16, 0xFC	; 252
 702:	1f 4f       	sbci	r17, 0xFF	; 255
 704:	08 c0       	rjmp	.+16     	; 0x716 <vfprintf+0x214>
 706:	60 81       	ld	r22, Z
 708:	71 81       	ldd	r23, Z+1	; 0x01
 70a:	07 2e       	mov	r0, r23
 70c:	00 0c       	add	r0, r0
 70e:	88 0b       	sbc	r24, r24
 710:	99 0b       	sbc	r25, r25
 712:	0e 5f       	subi	r16, 0xFE	; 254
 714:	1f 4f       	sbci	r17, 0xFF	; 255
 716:	f3 2d       	mov	r31, r3
 718:	ff 76       	andi	r31, 0x6F	; 111
 71a:	3f 2e       	mov	r3, r31
 71c:	97 ff       	sbrs	r25, 7
 71e:	09 c0       	rjmp	.+18     	; 0x732 <vfprintf+0x230>
 720:	90 95       	com	r25
 722:	80 95       	com	r24
 724:	70 95       	com	r23
 726:	61 95       	neg	r22
 728:	7f 4f       	sbci	r23, 0xFF	; 255
 72a:	8f 4f       	sbci	r24, 0xFF	; 255
 72c:	9f 4f       	sbci	r25, 0xFF	; 255
 72e:	f0 68       	ori	r31, 0x80	; 128
 730:	3f 2e       	mov	r3, r31
 732:	2a e0       	ldi	r18, 0x0A	; 10
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	a3 01       	movw	r20, r6
 738:	33 d1       	rcall	.+614    	; 0x9a0 <__ultoa_invert>
 73a:	88 2e       	mov	r8, r24
 73c:	86 18       	sub	r8, r6
 73e:	44 c0       	rjmp	.+136    	; 0x7c8 <vfprintf+0x2c6>
 740:	85 37       	cpi	r24, 0x75	; 117
 742:	31 f4       	brne	.+12     	; 0x750 <vfprintf+0x24e>
 744:	23 2d       	mov	r18, r3
 746:	2f 7e       	andi	r18, 0xEF	; 239
 748:	b2 2e       	mov	r11, r18
 74a:	2a e0       	ldi	r18, 0x0A	; 10
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	25 c0       	rjmp	.+74     	; 0x79a <vfprintf+0x298>
 750:	93 2d       	mov	r25, r3
 752:	99 7f       	andi	r25, 0xF9	; 249
 754:	b9 2e       	mov	r11, r25
 756:	8f 36       	cpi	r24, 0x6F	; 111
 758:	c1 f0       	breq	.+48     	; 0x78a <vfprintf+0x288>
 75a:	18 f4       	brcc	.+6      	; 0x762 <vfprintf+0x260>
 75c:	88 35       	cpi	r24, 0x58	; 88
 75e:	79 f0       	breq	.+30     	; 0x77e <vfprintf+0x27c>
 760:	ae c0       	rjmp	.+348    	; 0x8be <vfprintf+0x3bc>
 762:	80 37       	cpi	r24, 0x70	; 112
 764:	19 f0       	breq	.+6      	; 0x76c <vfprintf+0x26a>
 766:	88 37       	cpi	r24, 0x78	; 120
 768:	21 f0       	breq	.+8      	; 0x772 <vfprintf+0x270>
 76a:	a9 c0       	rjmp	.+338    	; 0x8be <vfprintf+0x3bc>
 76c:	e9 2f       	mov	r30, r25
 76e:	e0 61       	ori	r30, 0x10	; 16
 770:	be 2e       	mov	r11, r30
 772:	b4 fe       	sbrs	r11, 4
 774:	0d c0       	rjmp	.+26     	; 0x790 <vfprintf+0x28e>
 776:	fb 2d       	mov	r31, r11
 778:	f4 60       	ori	r31, 0x04	; 4
 77a:	bf 2e       	mov	r11, r31
 77c:	09 c0       	rjmp	.+18     	; 0x790 <vfprintf+0x28e>
 77e:	34 fe       	sbrs	r3, 4
 780:	0a c0       	rjmp	.+20     	; 0x796 <vfprintf+0x294>
 782:	29 2f       	mov	r18, r25
 784:	26 60       	ori	r18, 0x06	; 6
 786:	b2 2e       	mov	r11, r18
 788:	06 c0       	rjmp	.+12     	; 0x796 <vfprintf+0x294>
 78a:	28 e0       	ldi	r18, 0x08	; 8
 78c:	30 e0       	ldi	r19, 0x00	; 0
 78e:	05 c0       	rjmp	.+10     	; 0x79a <vfprintf+0x298>
 790:	20 e1       	ldi	r18, 0x10	; 16
 792:	30 e0       	ldi	r19, 0x00	; 0
 794:	02 c0       	rjmp	.+4      	; 0x79a <vfprintf+0x298>
 796:	20 e1       	ldi	r18, 0x10	; 16
 798:	32 e0       	ldi	r19, 0x02	; 2
 79a:	f8 01       	movw	r30, r16
 79c:	b7 fe       	sbrs	r11, 7
 79e:	07 c0       	rjmp	.+14     	; 0x7ae <vfprintf+0x2ac>
 7a0:	60 81       	ld	r22, Z
 7a2:	71 81       	ldd	r23, Z+1	; 0x01
 7a4:	82 81       	ldd	r24, Z+2	; 0x02
 7a6:	93 81       	ldd	r25, Z+3	; 0x03
 7a8:	0c 5f       	subi	r16, 0xFC	; 252
 7aa:	1f 4f       	sbci	r17, 0xFF	; 255
 7ac:	06 c0       	rjmp	.+12     	; 0x7ba <vfprintf+0x2b8>
 7ae:	60 81       	ld	r22, Z
 7b0:	71 81       	ldd	r23, Z+1	; 0x01
 7b2:	80 e0       	ldi	r24, 0x00	; 0
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	0e 5f       	subi	r16, 0xFE	; 254
 7b8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ba:	a3 01       	movw	r20, r6
 7bc:	f1 d0       	rcall	.+482    	; 0x9a0 <__ultoa_invert>
 7be:	88 2e       	mov	r8, r24
 7c0:	86 18       	sub	r8, r6
 7c2:	fb 2d       	mov	r31, r11
 7c4:	ff 77       	andi	r31, 0x7F	; 127
 7c6:	3f 2e       	mov	r3, r31
 7c8:	36 fe       	sbrs	r3, 6
 7ca:	0d c0       	rjmp	.+26     	; 0x7e6 <vfprintf+0x2e4>
 7cc:	23 2d       	mov	r18, r3
 7ce:	2e 7f       	andi	r18, 0xFE	; 254
 7d0:	a2 2e       	mov	r10, r18
 7d2:	89 14       	cp	r8, r9
 7d4:	58 f4       	brcc	.+22     	; 0x7ec <vfprintf+0x2ea>
 7d6:	34 fe       	sbrs	r3, 4
 7d8:	0b c0       	rjmp	.+22     	; 0x7f0 <vfprintf+0x2ee>
 7da:	32 fc       	sbrc	r3, 2
 7dc:	09 c0       	rjmp	.+18     	; 0x7f0 <vfprintf+0x2ee>
 7de:	83 2d       	mov	r24, r3
 7e0:	8e 7e       	andi	r24, 0xEE	; 238
 7e2:	a8 2e       	mov	r10, r24
 7e4:	05 c0       	rjmp	.+10     	; 0x7f0 <vfprintf+0x2ee>
 7e6:	b8 2c       	mov	r11, r8
 7e8:	a3 2c       	mov	r10, r3
 7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <vfprintf+0x2f0>
 7ec:	b8 2c       	mov	r11, r8
 7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <vfprintf+0x2f0>
 7f0:	b9 2c       	mov	r11, r9
 7f2:	a4 fe       	sbrs	r10, 4
 7f4:	0f c0       	rjmp	.+30     	; 0x814 <vfprintf+0x312>
 7f6:	fe 01       	movw	r30, r28
 7f8:	e8 0d       	add	r30, r8
 7fa:	f1 1d       	adc	r31, r1
 7fc:	80 81       	ld	r24, Z
 7fe:	80 33       	cpi	r24, 0x30	; 48
 800:	21 f4       	brne	.+8      	; 0x80a <vfprintf+0x308>
 802:	9a 2d       	mov	r25, r10
 804:	99 7e       	andi	r25, 0xE9	; 233
 806:	a9 2e       	mov	r10, r25
 808:	09 c0       	rjmp	.+18     	; 0x81c <vfprintf+0x31a>
 80a:	a2 fe       	sbrs	r10, 2
 80c:	06 c0       	rjmp	.+12     	; 0x81a <vfprintf+0x318>
 80e:	b3 94       	inc	r11
 810:	b3 94       	inc	r11
 812:	04 c0       	rjmp	.+8      	; 0x81c <vfprintf+0x31a>
 814:	8a 2d       	mov	r24, r10
 816:	86 78       	andi	r24, 0x86	; 134
 818:	09 f0       	breq	.+2      	; 0x81c <vfprintf+0x31a>
 81a:	b3 94       	inc	r11
 81c:	a3 fc       	sbrc	r10, 3
 81e:	10 c0       	rjmp	.+32     	; 0x840 <vfprintf+0x33e>
 820:	a0 fe       	sbrs	r10, 0
 822:	06 c0       	rjmp	.+12     	; 0x830 <vfprintf+0x32e>
 824:	b2 14       	cp	r11, r2
 826:	80 f4       	brcc	.+32     	; 0x848 <vfprintf+0x346>
 828:	28 0c       	add	r2, r8
 82a:	92 2c       	mov	r9, r2
 82c:	9b 18       	sub	r9, r11
 82e:	0d c0       	rjmp	.+26     	; 0x84a <vfprintf+0x348>
 830:	b2 14       	cp	r11, r2
 832:	58 f4       	brcc	.+22     	; 0x84a <vfprintf+0x348>
 834:	b6 01       	movw	r22, r12
 836:	80 e2       	ldi	r24, 0x20	; 32
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	76 d0       	rcall	.+236    	; 0x928 <fputc>
 83c:	b3 94       	inc	r11
 83e:	f8 cf       	rjmp	.-16     	; 0x830 <vfprintf+0x32e>
 840:	b2 14       	cp	r11, r2
 842:	18 f4       	brcc	.+6      	; 0x84a <vfprintf+0x348>
 844:	2b 18       	sub	r2, r11
 846:	02 c0       	rjmp	.+4      	; 0x84c <vfprintf+0x34a>
 848:	98 2c       	mov	r9, r8
 84a:	21 2c       	mov	r2, r1
 84c:	a4 fe       	sbrs	r10, 4
 84e:	0f c0       	rjmp	.+30     	; 0x86e <vfprintf+0x36c>
 850:	b6 01       	movw	r22, r12
 852:	80 e3       	ldi	r24, 0x30	; 48
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	68 d0       	rcall	.+208    	; 0x928 <fputc>
 858:	a2 fe       	sbrs	r10, 2
 85a:	16 c0       	rjmp	.+44     	; 0x888 <vfprintf+0x386>
 85c:	a1 fc       	sbrc	r10, 1
 85e:	03 c0       	rjmp	.+6      	; 0x866 <vfprintf+0x364>
 860:	88 e7       	ldi	r24, 0x78	; 120
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	02 c0       	rjmp	.+4      	; 0x86a <vfprintf+0x368>
 866:	88 e5       	ldi	r24, 0x58	; 88
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	b6 01       	movw	r22, r12
 86c:	0c c0       	rjmp	.+24     	; 0x886 <vfprintf+0x384>
 86e:	8a 2d       	mov	r24, r10
 870:	86 78       	andi	r24, 0x86	; 134
 872:	51 f0       	breq	.+20     	; 0x888 <vfprintf+0x386>
 874:	a1 fe       	sbrs	r10, 1
 876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0x37a>
 878:	8b e2       	ldi	r24, 0x2B	; 43
 87a:	01 c0       	rjmp	.+2      	; 0x87e <vfprintf+0x37c>
 87c:	80 e2       	ldi	r24, 0x20	; 32
 87e:	a7 fc       	sbrc	r10, 7
 880:	8d e2       	ldi	r24, 0x2D	; 45
 882:	b6 01       	movw	r22, r12
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	50 d0       	rcall	.+160    	; 0x928 <fputc>
 888:	89 14       	cp	r8, r9
 88a:	30 f4       	brcc	.+12     	; 0x898 <vfprintf+0x396>
 88c:	b6 01       	movw	r22, r12
 88e:	80 e3       	ldi	r24, 0x30	; 48
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	4a d0       	rcall	.+148    	; 0x928 <fputc>
 894:	9a 94       	dec	r9
 896:	f8 cf       	rjmp	.-16     	; 0x888 <vfprintf+0x386>
 898:	8a 94       	dec	r8
 89a:	f3 01       	movw	r30, r6
 89c:	e8 0d       	add	r30, r8
 89e:	f1 1d       	adc	r31, r1
 8a0:	80 81       	ld	r24, Z
 8a2:	b6 01       	movw	r22, r12
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	40 d0       	rcall	.+128    	; 0x928 <fputc>
 8a8:	81 10       	cpse	r8, r1
 8aa:	f6 cf       	rjmp	.-20     	; 0x898 <vfprintf+0x396>
 8ac:	22 20       	and	r2, r2
 8ae:	09 f4       	brne	.+2      	; 0x8b2 <vfprintf+0x3b0>
 8b0:	4e ce       	rjmp	.-868    	; 0x54e <vfprintf+0x4c>
 8b2:	b6 01       	movw	r22, r12
 8b4:	80 e2       	ldi	r24, 0x20	; 32
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	37 d0       	rcall	.+110    	; 0x928 <fputc>
 8ba:	2a 94       	dec	r2
 8bc:	f7 cf       	rjmp	.-18     	; 0x8ac <vfprintf+0x3aa>
 8be:	f6 01       	movw	r30, r12
 8c0:	86 81       	ldd	r24, Z+6	; 0x06
 8c2:	97 81       	ldd	r25, Z+7	; 0x07
 8c4:	02 c0       	rjmp	.+4      	; 0x8ca <vfprintf+0x3c8>
 8c6:	8f ef       	ldi	r24, 0xFF	; 255
 8c8:	9f ef       	ldi	r25, 0xFF	; 255
 8ca:	2b 96       	adiw	r28, 0x0b	; 11
 8cc:	0f b6       	in	r0, 0x3f	; 63
 8ce:	f8 94       	cli
 8d0:	de bf       	out	0x3e, r29	; 62
 8d2:	0f be       	out	0x3f, r0	; 63
 8d4:	cd bf       	out	0x3d, r28	; 61
 8d6:	df 91       	pop	r29
 8d8:	cf 91       	pop	r28
 8da:	1f 91       	pop	r17
 8dc:	0f 91       	pop	r16
 8de:	ff 90       	pop	r15
 8e0:	ef 90       	pop	r14
 8e2:	df 90       	pop	r13
 8e4:	cf 90       	pop	r12
 8e6:	bf 90       	pop	r11
 8e8:	af 90       	pop	r10
 8ea:	9f 90       	pop	r9
 8ec:	8f 90       	pop	r8
 8ee:	7f 90       	pop	r7
 8f0:	6f 90       	pop	r6
 8f2:	5f 90       	pop	r5
 8f4:	4f 90       	pop	r4
 8f6:	3f 90       	pop	r3
 8f8:	2f 90       	pop	r2
 8fa:	08 95       	ret

000008fc <strnlen_P>:
 8fc:	fc 01       	movw	r30, r24
 8fe:	05 90       	lpm	r0, Z+
 900:	61 50       	subi	r22, 0x01	; 1
 902:	70 40       	sbci	r23, 0x00	; 0
 904:	01 10       	cpse	r0, r1
 906:	d8 f7       	brcc	.-10     	; 0x8fe <strnlen_P+0x2>
 908:	80 95       	com	r24
 90a:	90 95       	com	r25
 90c:	8e 0f       	add	r24, r30
 90e:	9f 1f       	adc	r25, r31
 910:	08 95       	ret

00000912 <strnlen>:
 912:	fc 01       	movw	r30, r24
 914:	61 50       	subi	r22, 0x01	; 1
 916:	70 40       	sbci	r23, 0x00	; 0
 918:	01 90       	ld	r0, Z+
 91a:	01 10       	cpse	r0, r1
 91c:	d8 f7       	brcc	.-10     	; 0x914 <strnlen+0x2>
 91e:	80 95       	com	r24
 920:	90 95       	com	r25
 922:	8e 0f       	add	r24, r30
 924:	9f 1f       	adc	r25, r31
 926:	08 95       	ret

00000928 <fputc>:
 928:	0f 93       	push	r16
 92a:	1f 93       	push	r17
 92c:	cf 93       	push	r28
 92e:	df 93       	push	r29
 930:	fb 01       	movw	r30, r22
 932:	23 81       	ldd	r18, Z+3	; 0x03
 934:	21 fd       	sbrc	r18, 1
 936:	03 c0       	rjmp	.+6      	; 0x93e <fputc+0x16>
 938:	8f ef       	ldi	r24, 0xFF	; 255
 93a:	9f ef       	ldi	r25, 0xFF	; 255
 93c:	2c c0       	rjmp	.+88     	; 0x996 <fputc+0x6e>
 93e:	22 ff       	sbrs	r18, 2
 940:	16 c0       	rjmp	.+44     	; 0x96e <fputc+0x46>
 942:	46 81       	ldd	r20, Z+6	; 0x06
 944:	57 81       	ldd	r21, Z+7	; 0x07
 946:	24 81       	ldd	r18, Z+4	; 0x04
 948:	35 81       	ldd	r19, Z+5	; 0x05
 94a:	42 17       	cp	r20, r18
 94c:	53 07       	cpc	r21, r19
 94e:	44 f4       	brge	.+16     	; 0x960 <fputc+0x38>
 950:	a0 81       	ld	r26, Z
 952:	b1 81       	ldd	r27, Z+1	; 0x01
 954:	9d 01       	movw	r18, r26
 956:	2f 5f       	subi	r18, 0xFF	; 255
 958:	3f 4f       	sbci	r19, 0xFF	; 255
 95a:	31 83       	std	Z+1, r19	; 0x01
 95c:	20 83       	st	Z, r18
 95e:	8c 93       	st	X, r24
 960:	26 81       	ldd	r18, Z+6	; 0x06
 962:	37 81       	ldd	r19, Z+7	; 0x07
 964:	2f 5f       	subi	r18, 0xFF	; 255
 966:	3f 4f       	sbci	r19, 0xFF	; 255
 968:	37 83       	std	Z+7, r19	; 0x07
 96a:	26 83       	std	Z+6, r18	; 0x06
 96c:	14 c0       	rjmp	.+40     	; 0x996 <fputc+0x6e>
 96e:	8b 01       	movw	r16, r22
 970:	ec 01       	movw	r28, r24
 972:	fb 01       	movw	r30, r22
 974:	00 84       	ldd	r0, Z+8	; 0x08
 976:	f1 85       	ldd	r31, Z+9	; 0x09
 978:	e0 2d       	mov	r30, r0
 97a:	19 95       	eicall
 97c:	89 2b       	or	r24, r25
 97e:	e1 f6       	brne	.-72     	; 0x938 <fputc+0x10>
 980:	d8 01       	movw	r26, r16
 982:	16 96       	adiw	r26, 0x06	; 6
 984:	8d 91       	ld	r24, X+
 986:	9c 91       	ld	r25, X
 988:	17 97       	sbiw	r26, 0x07	; 7
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	17 96       	adiw	r26, 0x07	; 7
 98e:	9c 93       	st	X, r25
 990:	8e 93       	st	-X, r24
 992:	16 97       	sbiw	r26, 0x06	; 6
 994:	ce 01       	movw	r24, r28
 996:	df 91       	pop	r29
 998:	cf 91       	pop	r28
 99a:	1f 91       	pop	r17
 99c:	0f 91       	pop	r16
 99e:	08 95       	ret

000009a0 <__ultoa_invert>:
 9a0:	fa 01       	movw	r30, r20
 9a2:	aa 27       	eor	r26, r26
 9a4:	28 30       	cpi	r18, 0x08	; 8
 9a6:	51 f1       	breq	.+84     	; 0x9fc <__ultoa_invert+0x5c>
 9a8:	20 31       	cpi	r18, 0x10	; 16
 9aa:	81 f1       	breq	.+96     	; 0xa0c <__ultoa_invert+0x6c>
 9ac:	e8 94       	clt
 9ae:	6f 93       	push	r22
 9b0:	6e 7f       	andi	r22, 0xFE	; 254
 9b2:	6e 5f       	subi	r22, 0xFE	; 254
 9b4:	7f 4f       	sbci	r23, 0xFF	; 255
 9b6:	8f 4f       	sbci	r24, 0xFF	; 255
 9b8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ba:	af 4f       	sbci	r26, 0xFF	; 255
 9bc:	b1 e0       	ldi	r27, 0x01	; 1
 9be:	3e d0       	rcall	.+124    	; 0xa3c <__ultoa_invert+0x9c>
 9c0:	b4 e0       	ldi	r27, 0x04	; 4
 9c2:	3c d0       	rcall	.+120    	; 0xa3c <__ultoa_invert+0x9c>
 9c4:	67 0f       	add	r22, r23
 9c6:	78 1f       	adc	r23, r24
 9c8:	89 1f       	adc	r24, r25
 9ca:	9a 1f       	adc	r25, r26
 9cc:	a1 1d       	adc	r26, r1
 9ce:	68 0f       	add	r22, r24
 9d0:	79 1f       	adc	r23, r25
 9d2:	8a 1f       	adc	r24, r26
 9d4:	91 1d       	adc	r25, r1
 9d6:	a1 1d       	adc	r26, r1
 9d8:	6a 0f       	add	r22, r26
 9da:	71 1d       	adc	r23, r1
 9dc:	81 1d       	adc	r24, r1
 9de:	91 1d       	adc	r25, r1
 9e0:	a1 1d       	adc	r26, r1
 9e2:	20 d0       	rcall	.+64     	; 0xa24 <__ultoa_invert+0x84>
 9e4:	09 f4       	brne	.+2      	; 0x9e8 <__ultoa_invert+0x48>
 9e6:	68 94       	set
 9e8:	3f 91       	pop	r19
 9ea:	2a e0       	ldi	r18, 0x0A	; 10
 9ec:	26 9f       	mul	r18, r22
 9ee:	11 24       	eor	r1, r1
 9f0:	30 19       	sub	r19, r0
 9f2:	30 5d       	subi	r19, 0xD0	; 208
 9f4:	31 93       	st	Z+, r19
 9f6:	de f6       	brtc	.-74     	; 0x9ae <__ultoa_invert+0xe>
 9f8:	cf 01       	movw	r24, r30
 9fa:	08 95       	ret
 9fc:	46 2f       	mov	r20, r22
 9fe:	47 70       	andi	r20, 0x07	; 7
 a00:	40 5d       	subi	r20, 0xD0	; 208
 a02:	41 93       	st	Z+, r20
 a04:	b3 e0       	ldi	r27, 0x03	; 3
 a06:	0f d0       	rcall	.+30     	; 0xa26 <__ultoa_invert+0x86>
 a08:	c9 f7       	brne	.-14     	; 0x9fc <__ultoa_invert+0x5c>
 a0a:	f6 cf       	rjmp	.-20     	; 0x9f8 <__ultoa_invert+0x58>
 a0c:	46 2f       	mov	r20, r22
 a0e:	4f 70       	andi	r20, 0x0F	; 15
 a10:	40 5d       	subi	r20, 0xD0	; 208
 a12:	4a 33       	cpi	r20, 0x3A	; 58
 a14:	18 f0       	brcs	.+6      	; 0xa1c <__ultoa_invert+0x7c>
 a16:	49 5d       	subi	r20, 0xD9	; 217
 a18:	31 fd       	sbrc	r19, 1
 a1a:	40 52       	subi	r20, 0x20	; 32
 a1c:	41 93       	st	Z+, r20
 a1e:	02 d0       	rcall	.+4      	; 0xa24 <__ultoa_invert+0x84>
 a20:	a9 f7       	brne	.-22     	; 0xa0c <__ultoa_invert+0x6c>
 a22:	ea cf       	rjmp	.-44     	; 0x9f8 <__ultoa_invert+0x58>
 a24:	b4 e0       	ldi	r27, 0x04	; 4
 a26:	a6 95       	lsr	r26
 a28:	97 95       	ror	r25
 a2a:	87 95       	ror	r24
 a2c:	77 95       	ror	r23
 a2e:	67 95       	ror	r22
 a30:	ba 95       	dec	r27
 a32:	c9 f7       	brne	.-14     	; 0xa26 <__ultoa_invert+0x86>
 a34:	00 97       	sbiw	r24, 0x00	; 0
 a36:	61 05       	cpc	r22, r1
 a38:	71 05       	cpc	r23, r1
 a3a:	08 95       	ret
 a3c:	9b 01       	movw	r18, r22
 a3e:	ac 01       	movw	r20, r24
 a40:	0a 2e       	mov	r0, r26
 a42:	06 94       	lsr	r0
 a44:	57 95       	ror	r21
 a46:	47 95       	ror	r20
 a48:	37 95       	ror	r19
 a4a:	27 95       	ror	r18
 a4c:	ba 95       	dec	r27
 a4e:	c9 f7       	brne	.-14     	; 0xa42 <__ultoa_invert+0xa2>
 a50:	62 0f       	add	r22, r18
 a52:	73 1f       	adc	r23, r19
 a54:	84 1f       	adc	r24, r20
 a56:	95 1f       	adc	r25, r21
 a58:	a0 1d       	adc	r26, r0
 a5a:	08 95       	ret

00000a5c <_exit>:
 a5c:	f8 94       	cli

00000a5e <__stop_program>:
 a5e:	ff cf       	rjmp	.-2      	; 0xa5e <__stop_program>
